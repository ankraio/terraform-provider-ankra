name: Build and Release Terraform Provider

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Import GPG key
        run: echo "${{ secrets.GPG_KEY }}" | gpg --batch --import

      - name: Build provider binaries
        run: |
          mkdir -p provider/dist
          cd provider
          GOOS=linux   GOARCH=amd64  go build -o dist/terraform-provider-ankra_linux_amd64   .
          GOOS=darwin  GOARCH=amd64  go build -o dist/terraform-provider-ankra_darwin_amd64  .
          GOOS=darwin  GOARCH=arm64  go build -o dist/terraform-provider-ankra_darwin_arm64  .
          GOOS=windows GOARCH=amd64  go build -o dist/terraform-provider-ankra_windows_amd64.exe .
          cd ..

      - name: Zip binaries & generate checksums
        run: |
          cd provider/dist
          rm -f terraform-provider-ankra_*.zip

          # 1) Package each binary, stripping .exe in the ZIP filename
          for bin in terraform-provider-ankra_*; do
            base=$(basename "$bin" .exe)
            zip "${base}.zip" "$bin"
          done

          # 2) Derive the short tag name
          TAG="${GITHUB_REF#refs/tags/}"

          # 3) Create checksum file
          CHECKSUM_FILE="terraform-provider-ankra_${TAG}_SHA256SUMS"
          shasum -a 256 *.zip > "${CHECKSUM_FILE}"

          # 4) Sign it (binary signature, no --armor)
          gpg --batch --yes --pinentry-mode loopback \
            --passphrase "$GPG_PASSPHRASE" \
            --output "${CHECKSUM_FILE}.sig" \
            --detach-sign "${CHECKSUM_FILE}"

          # 5) Generate the manifest JSON
          cat <<EOF > "terraform-provider-ankra_${TAG}_manifest.json"
          {
            "providers": [
              {
                "os": "linux",
                "arch": "amd64",
                "url": "https://github.com/ankraio/terraform-provider-ankra/releases/download/${TAG}/terraform-provider-ankra_linux_amd64.zip",
                "sha256": "$(shasum -a 256 terraform-provider-ankra_linux_amd64.zip | cut -d' ' -f1)"
              },
              {
                "os": "darwin",
                "arch": "amd64",
                "url": "https://github.com/ankraio/terraform-provider-ankra/releases/download/${TAG}/terraform-provider-ankra_darwin_amd64.zip",
                "sha256": "$(shasum -a 256 terraform-provider-ankra_darwin_amd64.zip | cut -d' ' -f1)"
              },
              {
                "os": "darwin",
                "arch": "arm64",
                "url": "https://github.com/ankraio/terraform-provider-ankra/releases/download/${TAG}/terraform-provider-ankra_darwin_arm64.zip",
                "sha256": "$(shasum -a 256 terraform-provider-ankra_darwin_arm64.zip | cut -d' ' -f1)"
              },
              {
                "os": "windows",
                "arch": "amd64",
                "url": "https://github.com/ankraio/terraform-provider-ankra/releases/download/${TAG}/terraform-provider-ankra_windows_amd64.zip",
                "sha256": "$(shasum -a 256 terraform-provider-ankra_windows_amd64.zip | cut -d' ' -f1)"
              }
            ]
          }
          EOF

          # 6) Copy everything to the repo root for upload
          cp *.zip ../..
          cp "${CHECKSUM_FILE}" "${CHECKSUM_FILE}.sig" ../..
          cp "terraform-provider-ankra_${TAG}_manifest.json" ../..
          cd ../..

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: provider-artifacts
          path: |
            provider/dist/*.zip
            terraform-provider-ankra_*_SHA256SUMS
            terraform-provider-ankra_*_SHA256SUMS.sig
            terraform-provider-ankra_*_manifest.json

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: provider-artifacts
          path: .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.release.tag_name }}
          release_name: ${{ github.event.release.tag_name }}
          draft: false
          prerelease: false
          files: |
            provider/dist/*.zip
            terraform-provider-ankra_*_SHA256SUMS
            terraform-provider-ankra_*_SHA256SUMS.sig
            terraform-provider-ankra_*_manifest.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
