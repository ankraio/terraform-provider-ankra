name: Release Terraform Provider

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      PROVIDER_NAME: ankra
    steps:
      - uses: actions/checkout@v4

      - name: Setup GPG for CI signing
        env:
          GPG_KEY:     ${{ secrets.GPG_KEY }}
        run: |
          mkdir -p ~/.gnupg && chmod 700 ~/.gnupg
          echo "pinentry-mode loopback" > ~/.gnupg/gpg.conf
          echo "$GPG_KEY" | gpg --batch --import

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: v2.11.1
          args: release --clean
        env:
          GITHUB_TOKEN:    ${{ secrets.GITHUB_TOKEN }}
          GPG_PASSPHRASE:  ${{ secrets.GPG_PASSPHRASE }}
          GPG_FINGERPRINT: ${{ secrets.GPG_FINGERPRINT }}

      - name: Determine version
        id: vars
        run: |
          # strip leading "v"
          echo "VERSION=$(git describe --tags --abbrev=0 | sed 's/^v//')" >> $GITHUB_OUTPUT

      - name: Generate Terraform Registry manifest
        run: |
          bash scripts/generate-manifest.sh "${{ steps.vars.outputs.VERSION }}"

      - name: Find Release by Tag
        id: find_release
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const tag = context.ref.replace('refs/tags/', '');
            const { data: release } = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo:  context.repo.repo,
              tag,
            });
            return release.id;

      - name: Upload all release assets
        uses: actions/upload-release-asset@v3
        with:
          upload_url: ${{ steps.find_release.outputs.result }}
          asset_path: |
            dist/terraform-provider-${{ env.PROVIDER_NAME }}_v${{ steps.vars.outputs.VERSION }}_*.zip
            dist/terraform-provider-${{ env.PROVIDER_NAME }}_v${{ steps.vars.outputs.VERSION }}_SHA256SUMS
            dist/terraform-provider-${{ env.PROVIDER_NAME }}_v${{ steps.vars.outputs.VERSION }}_SHA256SUMS.sig
            dist/terraform-provider-${{ env.PROVIDER_NAME }}_v${{ steps.vars.outputs.VERSION }}_manifest.json
          asset_name: |
            terraform-provider-${{ env.PROVIDER_NAME }}_v${{ steps.vars.outputs.VERSION }}_*.zip
            terraform-provider-${{ env.PROVIDER_NAME }}_v${{ steps.vars.outputs.VERSION }}_SHA256SUMS
            terraform-provider-${{ env.PROVIDER_NAME }}_v${{ steps.vars.outputs.VERSION }}_SHA256SUMS.sig
            terraform-provider-${{ env.PROVIDER_NAME }}_v${{ steps.vars.outputs.VERSION }}_manifest.json
          asset_content_type: |
            application/zip
            text/plain
            text/plain
            application/json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
