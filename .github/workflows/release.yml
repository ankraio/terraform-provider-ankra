name: Build and Release Terraform Provider

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Show workspace structure
        run: |
          pwd
          ls -lR

      - name: Import GPG key
        env:
          GPG_KEY: ${{ secrets.GPG_KEY }}
        run: |
          echo "$GPG_KEY" | gpg --batch --import

      - name: Build provider binaries
        run: |
          mkdir -p provider/dist
          cd provider
          GOOS=linux   GOARCH=amd64  go build -o dist/terraform-provider-ankra_linux_amd64   .
          GOOS=darwin  GOARCH=amd64  go build -o dist/terraform-provider-ankra_darwin_amd64  .
          GOOS=darwin  GOARCH=arm64  go build -o dist/terraform-provider-ankra_darwin_arm64  .
          GOOS=windows GOARCH=amd64  go build -o dist/terraform-provider-ankra_windows_amd64.exe .
          cd ..

      - name: Zip binaries & generate + sign checksums
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          cd provider/dist

          # Zip each binary
          for bin in terraform-provider-ankra_*; do
            zip "${bin}.zip" "$bin"
          done

          # Generate the SHA256SUMS file
          shasum -a 256 *.zip > SHA256SUMS

          # Create an armored detached signature
          gpg --batch --yes --pinentry-mode loopback \
            --passphrase "$GPG_PASSPHRASE" \
            --armor --output SHA256SUMS.sig \
            --detach-sign SHA256SUMS

          # Copy them up to the repo root so the artifact uploader picks them up
          cp SHA256SUMS SHA256SUMS.sig ../..

          cd ../..

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: provider-artifacts
          path: |
            provider/dist/
            SHA256SUMS
            SHA256SUMS.sig

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: provider-artifacts
          # omitted `path:` so it unpacks into the repository root

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            SHA256SUMS
            SHA256SUMS.sig
            provider/dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
